package com.marcos.hacker.missoes;

import com.marcos.hacker.utils.TerminalUtils;
import java.io.IOException;

import java.util.Scanner; 
import java.util.Random;
import java.util.Arrays;

public class MissaoRede{

    private String ip = "192.168.34.12";
    private Scanner input = new Scanner(System.in);

    public void brif(){
        System.out.println("Relat√≥rio de Intelig√™ncia (B.R.I.F):");
        System.out.println("Empresa: OrbisData Corp");
        System.out.println("Objetivo: Obter acesso ao servidor de arquivos internos (Servidor-Alvo: ORB-SRV02).");
        System.out.println("Rede com m√∫ltiplas sub-redes internas, roteadores com monitoramento parcial.");
        System.out.println("Algumas portas e servi√ßos est√£o ativos mas n√£o documentados.");
        System.out.println("Tarefa: Escanear, investigar e infiltrar-se discretamente at√© o servidor-alvo.");
        System.out.println("Recompensa: +1 N√≠vel de Acesso | +10 Pontos de Reputa√ß√£o Hacker\n");

        System.out.println("Ferramentas dispon√≠veis:");
        System.out.println("- ping");
        System.out.println("- nmap");
        System.out.println("- traceroute");
        System.out.println("- verify-bin <IP>");
    }

    public String dados(){

        System.out.println("Ponto de partida: IP descoberto para in√≠cio da investiga√ß√£o -> "+ ip);

        System.out.println("Lembrete de ferramentas dispon√≠veis:");
        System.out.println("- ping");
        System.out.println("- nmap");
        System.out.println("- traceroute");
        System.out.println("- whois");
        System.out.println("- verify-bin <IP>");

        String nome = "marcos";

        return nome;
    }

    public void terminal(){

        //Scanner input = new Scanner(System.in);

        try {
            Thread.sleep(1000);
            System.out.println("Autenticando usu√°rio...");
            Thread.sleep(1000);
            System.out.println("Acesso concedido.\n");
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        try{
            System.out.println("\nEstabelecendo conex√£o com o host remoto...");
            for (int i = 0; i < 3; i++) {
                System.out.print("Carregando");
                for (int j = 0; j < 3; j++) {
                    Thread.sleep(500);
                    System.out.print(".");
                }
                System.out.println();
            }

            Thread.sleep(800);
            System.out.println("\nConex√£o estabelecida com sucesso.");
            Thread.sleep(1000);
            System.out.println("Iniciando terminal seguro...\n");
            Thread.sleep(1500);

            // Simula√ß√£o de terminal tipo Linux
            System.out.println("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
            System.out.println("‚ïë              TERMINAL DE INFILTRA√á√ÉO ATIVO             ‚ïë");
            System.out.println("‚ïë              Sess√£o: orbis@brif | Host: ORB-SRV02      ‚ïë");
            System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n");
            Thread.sleep(300);
            System.out.println("IP da conex√£o: "+ ip);

            // Interface est√°tica tipo terminal

            for(int i = 0; i < 10; i++){
                System.out.println("orbis@brif:~$ ");
                Thread.sleep(500);

            }
            //System.out.print("orbis@brif:~$ ");
            //String comando = input.nextLine();

            // System.out.println("orbis@brif:~$ ‚ñà");
            // System.out.println("orbis@brif:~$ ‚ñà");
            // System.out.println("orbis@brif:~$ ‚ñà");
            // System.out.print("orbis@brif:~$ ‚ñà");

        }catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    public final static void nmap() {
        System.out.println("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        System.out.println("‚ïë         Network Scan Result      ‚ïë");
        System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
        //System.out.println("‚ïë IP:192.168.1.1  | Online  | DNS  ‚ïë");
        System.out.println("‚ïë IP:192.168.1.5   | Online  | DB  ‚ïë");
        System.out.println("‚ïë IP: 192.168.1.7  | Offline | --- ‚ïë");
        System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
    }

    public final static void comandoInvalido() throws InterruptedException {
        Random rand = new Random();
        int option = rand.nextInt(3); // 0, 1 ou 2

        System.out.println(); // espa√ßo antes do erro

        switch (option) {
            case 0 -> {
                System.out.println("E: comando n√£o reconhecido...");
                Thread.sleep(250);
                System.out.println("attempting override...");
                Thread.sleep(200);
                System.out.println("override denied. permission missing.");
                Thread.sleep(180);
                System.out.println("system status: [degraded]");
            }

            case 1 -> {
                System.out.println("WARNING: protocol mismatch");
                Thread.sleep(180);
                System.out.println("connection dropped.");
                Thread.sleep(220);
                System.out.println("attempting to re-route...");
                Thread.sleep(250);
                System.out.println("ERR:: route table not found.");
            }

            case 2 -> {
                System.out.println("ALERT: corrupted input stream detected.");
                Thread.sleep(200);
                System.out.println("E: falha cr√≠tica no shell principal...");
                Thread.sleep(250);
                System.out.println("fallback shell engaged.");
            }
        }

        Thread.sleep(150);
        System.out.print("orbis@brif:~$ ");
    }

    public final static void pingInvalido(String ip) throws InterruptedException {
        System.out.println("PING " + ip + " ...");
        Thread.sleep(400);
        System.out.println("Solicitando resposta...");
        Thread.sleep(500);
        System.out.println(".");

        for (int i = 0; i < 3; i++) {
            System.out.print(". ");
            Thread.sleep(300);
        }

        System.out.println("\n\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        System.out.println("‚ïë         ERRO NA COMUNICA√á√ÉO        ‚ïë");
        System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
        System.out.printf ("‚ïë IP: %-15s ‚îÇ SEM RESPOSTA         ‚ïë%n", ip);
        System.out.println("‚ïë Motivo: servi√ßo indispon√≠vel       ‚ïë");
        System.out.println("‚ïë Ou: acesso negado pela rede        ‚ïë");
        System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
        System.out.println();
    }

    public static void pingSimulado(String ip) throws InterruptedException {
        System.out.println("PING " + ip + " ( " + ip + " ) 56(84) bytes of data:");

        Random rand = new Random();

        for (int i = 1; i <= 15; i++) {
            double tempo = 20 + rand.nextDouble() * 5; // tempo entre 20~25 ms
            int ttl = 64;

            System.out.printf("64 bytes from %s: icmp_seq=%d ttl=%d time=%.1f ms%n",
                    ip, i, ttl, tempo);

            Thread.sleep(600);
        }

        // Simulando resumo igual ao ping do Linux
        System.out.println();
        System.out.printf("--- %s ping statistics ---\n", ip);
        System.out.println("4 packets transmitted, 4 received, 0% packet loss, time 2402ms");
        System.out.println("rtt min/avg/max = 20.3/22.7/24.9 ms");
    }

    public static void comandoRestrito(String comando, String ip) throws InterruptedException {
        System.out.printf("Executando '%s' em %s...\n", comando, ip);
        Thread.sleep(500);

        System.out.println("Verificando permiss√µes...");
        Thread.sleep(600);
        System.out.println("Estabelecendo conex√£o segura...");
        Thread.sleep(600);

        System.out.println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        System.out.println("‚ïë      ‚ö†Ô∏è  ACESSO RESTRITO DETECTADO        ‚ïë");
        System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
        System.out.printf ("‚ïë Comando: %-30s ‚ïë%n", comando);
        System.out.printf ("‚ïë Alvo: %-33s ‚ïë%n", ip);
        System.out.println("‚ïë Erro: Servi√ßo n√£o autorizado para esse host ‚ïë");
        System.out.println("‚ïë Motivo: Pol√≠tica de seguran√ßa ativa         ‚ïë");
        System.out.println("‚ïë Status: Conex√£o encerrada pelo host remoto  ‚ïë");
        System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");

        Thread.sleep(400);
        System.out.println("\n[LOG] üîê Tentativa registrada pelo firewall central.");
        System.out.println("[INFO] Sugest√£o: tente outro comando ou IP autorizado.\n");
        System.out.print("orbis@brif:~$ ");
    }

    public static void exibirAjuda() throws InterruptedException {
        System.out.println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        System.out.println("‚ïë         ‚â° TERMINAL DE COMANDOS ATIVOS ‚â°     ‚ïë");
        System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
        Thread.sleep(300);
        System.out.println("‚ïë > ping               ‚îÇ verifica status de um IP        ‚ïë");
        Thread.sleep(300);
        System.out.println("‚ïë > nmap               ‚îÇ escaneia dispositivos na rede   ‚ïë");
        Thread.sleep(300);
        System.out.println("‚ïë > traceroute         ‚îÇ rastreia a rota at√© o destino   ‚ïë");
        Thread.sleep(300);
        System.out.println("‚ïë > verify-bin <IP>    ‚îÇ verifica integridade bin√°ria    ‚ïë");
        System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
        Thread.sleep(500);

        System.out.println("\nüí° DICA: tente executar os comandos acima em diferentes IPs.");
        Thread.sleep(600);
        System.out.println("üîç Nem todos os hosts respondem igual. Alguns... escondem algo.");
        Thread.sleep(800);
        System.out.println("üë§ LOG: Atividade do terminal est√° sendo monitorada...");
        Thread.sleep(1000);
        System.out.print("\norbis@brif:~$ ");
    }

    public static void analisadorDeRotas() throws InterruptedException {
        System.out.println("[ ANALISADOR DE ROTAS DE PACOTE - CAMADA DE REDE ]\n");
        Thread.sleep(600);

        System.out.println("| ROTA 01 |");
        System.out.println("Origem.................: 192.168.1.1");
        System.out.println("N√≥ Intermedi√°rio.......: 11000000.10101000.00000001.00000100");
        System.out.println("Destino................: 192.168.1.5");
        System.out.println("Status.................: Integridade Confirmada\n");
        Thread.sleep(700);

        System.out.println("| ROTA 02 |");
        System.out.println("Origem.................: 192.168.1.1");
        System.out.println("N√≥ Intermedi√°rio.......: C0.A8.01.05");
        System.out.println("Destino................: 192.168.1.6");
        System.out.println("Status.................: Integridade Confirmada\n");
        Thread.sleep(700);

        System.out.println("| ROTA 03 |");
        System.out.println("Origem.................: 192.168.1.1");
        System.out.println("N√≥ Intermedi√°rio.......: 11000000.10101000.00000001.00000111");
        System.out.println("Destino................: @@@.1@8.1.@");
        System.out.println("Status.................: Falha de Verifica√ß√£o: Integridade comprometida\n");
        Thread.sleep(800);

        // System.out.println("üí° DICA: Traduza o n√≥ bin√°rio da ROTA 3 para o formato decimal.");
        // System.out.println("üìå Padr√£o semelhante √†s rotas anteriores pode revelar o IP oculto.");
        // Thread.sleep(600);
        System.out.print("\norbis@brif:~$ ");
    }

    public static void revelarIpMaster() throws InterruptedException {
        System.out.println("\nDecodifica√ß√£o aceita.");
        Thread.sleep(500);
        System.out.println("Validando pacotes...");
        Thread.sleep(600);
        System.out.println("Acesso a camadas superiores autorizado.");
        Thread.sleep(800);

        System.out.println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        System.out.println("‚ïë             N√ì OCULTO IDENTIFICADO                  ‚ïë");
        System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
        System.out.println("‚ïë IP MASTER..............: 10.42.0.254                ‚ïë");
        System.out.println("‚ïë CAMADA..................: Root-Level                ‚ïë");
        System.out.println("‚ïë SISTEMA................: Orbis OS (vers√£o sigilosa) ‚ïë");
        System.out.println("‚ïë STATUS..................: Ativo / Aguardando..      ‚ïë");
        System.out.println("‚ïë √öLTIMO CONTATO..........: 03h42min atr√°s            ‚ïë");
        System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
        Thread.sleep(800);

        System.out.println("\n CONEX√ÉO ESTABELECIDA COM O IP MASTER.");
        Thread.sleep(600);
        System.out.println("  TODOS OS OLHOS EST√ÉO SOBRE VOC√ä...");
        Thread.sleep(700);
        System.out.println(" ALERTA: Qualquer a√ß√£o nesta inst√¢ncia ser√° monitorada pelo n√∫cleo.");
        Thread.sleep(900);
        System.out.print("\norbis@brif:~$ ");
    }


    public static void executarExtracaoFinal() throws InterruptedException {
        System.out.println("Conectando a 10.42.0.254...");
        Thread.sleep(1000);
        System.out.println("Acesso concedido. Iniciando opera√ß√£o: extract-core");
        Thread.sleep(1200);
        System.out.println();

        // Simulando terminal de extra√ß√£o estilo Linux
        for (int i = 1; i <= 10; i++) {
            String arquivo = "orbis/core/segment" + i + ".bin";
            System.out.printf("[*] Extraindo %-30s [", arquivo);
            for (int j = 0; j < 30; j++) {
                System.out.print("=");
                Thread.sleep(20);
            }
            System.out.println("] OK");
            Thread.sleep(80);
        }

        

        Thread.sleep(600);
        System.out.println("\nFinalizando processo...");
        Thread.sleep(1000);
        System.out.println("‚úî Todos os arquivos extra√≠dos com sucesso.");
        Thread.sleep(800);
        System.out.println("‚ö†Ô∏è  ATEN√á√ÉO: Detec√ß√£o de checksum alterado em segmentos cr√≠ticos.");
        Thread.sleep(1000);
        System.out.println("üîí Sess√£o ser√° encerrada pelo sistema remoto por seguran√ßa...\n");
        Thread.sleep(1500);

        System.out.println("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        System.out.println("‚ïë       üîê CONEX√ÉO TERMINADA PELO HOST        ‚ïë");
        System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
        System.out.println("‚ïë IP...................: 10.42.0.254         ‚ïë");
        System.out.println("‚ïë Motivo...............: Protocolo encerrado ‚ïë");
        System.out.println("‚ïë Status...............: Sess√£o encerrada    ‚ïë");
        System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");

        Thread.sleep(1000);

        System.out.print("\norbis@brif:~$ ");
    }

    public static void missaoConcluida() throws InterruptedException {
        System.out.println("\nFinalizando protocolo...");
        Thread.sleep(1000);
        System.out.println("Analisando rastros digitais...");
        Thread.sleep(900);
        System.out.println("Encerrando sess√£o segura...");
        Thread.sleep(700);

        System.out.println("\n\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        Thread.sleep(100);
        System.out.println("‚ïë                                            ‚ïë");
        Thread.sleep(100);
        System.out.println("‚ïë      ‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     ‚ïë");
        Thread.sleep(100);
        System.out.println("‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ïë");
        Thread.sleep(100);
        System.out.println("‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ïë");
        Thread.sleep(100);
        System.out.println("‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë ‚ñà‚ñà‚ñà‚ïî‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ïë");
        Thread.sleep(100);
        System.out.println("‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïë");
        Thread.sleep(100);
        System.out.println("‚ïë     ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïë");
        Thread.sleep(100);
        System.out.println("‚ïë                                            ‚ïë");
        System.out.println("‚ïë         ‚úÖ MISS√ÉO CONCLU√çDA COM SUCESSO       ‚ïë");
        System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
        System.out.println("‚ïë Pr√≥ximo n√≠vel desbloqueado: [REDACTED]     ‚ïë");
        System.out.println("‚ïë Registro salvo em: /root/orbis/relatos.log ‚ïë");
        System.out.println("‚ïë N√≠vel de rastreamento: ‚ö†Ô∏è BAIXO              ‚ïë");
        System.out.println("‚ïë C√≥digo de sess√£o: 0x5F2C9A3D               ‚ïë");
        System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");

        Thread.sleep(1400);
        System.out.println("\nüëÅÔ∏è  Voc√™ foi observado. Voc√™ passou no teste.");
        Thread.sleep(1200);
        System.out.println("üí° Prepare-se. H√° mais por tr√°s do Orbis do que voc√™ imagina...");
        Thread.sleep(1000);

        System.out.print("\norbis@brif:~$ ");
    }


    public static void explosaoDeLogsAvancado() throws InterruptedException {
        Random rand = new Random();
        String[] tags = {"[INFO]", "[WARNING]", "[ERROR]", "[DEBUG]", "[CRITICAL]", "[FAIL]", "[TRACE]", "[SYSLOG]"};
        String[] mensagens = {
            "Thread killed due to memory leak",
            "Auth timeout at sector",
            "Connection lost to node",
            "Reloading /etc/orbis/core.conf",
            "Packet dropped: malformed header",
            "Binary checksum failed",
            "Overriding system lockout...",
            "SIGKILL received on main process",
            "Temporary buffer corrupted",
            "Filesystem mounted readonly",
            "Encrypting memory space",
            "Device 0xA34C disconnected",
            "Invalid response from 10.42.0.254",
            "Root daemon restarting",
            "Unauthorized access attempt",
            "Writing to swap partition",
            "watchdog: system not responding",
            "Rolling log... sequence mismatch",
            "Core overflow. Attempting fallback",
            "Entering emergency mode..."
        };

        // Simula muitas linhas subindo rapidamente
        for (int i = 0; i < 100; i++) {
            String tag = tags[rand.nextInt(tags.length)];
            String msg = mensagens[rand.nextInt(mensagens.length)];

            // Simula uma linha longa com data e detalhes t√©cnicos
            String linha = String.format("%s [0x%08X] %s...%s", 
                            tag, rand.nextInt(0xFFFFFFF), 
                            msg, gerarLixoTecnico(rand, 60 + rand.nextInt(20)));

            System.out.println(linha);
            Thread.sleep(30); // velocidade r√°pida e dram√°tica
        }

        Thread.sleep(500);
        System.out.println("\n‚ö†Ô∏è  BUFFER OVERFLOW DETECTADO...");
        Thread.sleep(600);
        System.out.println("üí• KERNEL PANIC ‚Äî SISTEMA CRITICAMENTE INST√ÅVEL");
        Thread.sleep(800);
        System.out.println("üîí INICIANDO PROTOCOLO DE CONTEN√á√ÉO...\n");
        Thread.sleep(1000);
        System.out.print("orbis@brif:~$ ");
    }

    private static String gerarLixoTecnico(Random rand, int comprimento) {
        String simbolos = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789/\\|@#$%^&*-_=+<>~";
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < comprimento; i++) {
            sb.append(simbolos.charAt(rand.nextInt(simbolos.length())));
        }
        return sb.toString();
    }

    public final boolean puzzle01() throws InterruptedException {

        String[] comandos = {"HELP","NMAP 192.168.34.12", "PING 192.168.34.12", "TRACEROUTE 192.168.34.12", "VERIFY-BIN 192.168.34.12", "PING 192.168.1.5", "PING 192.168.1.7", "TRACEROUTE 192.168.1.5","VERIFY-BIN 192.168.1.7", "GET-CORE 10.42.0.254"};

        boolean continuar = true;

        while(continuar){

            System.out.print("orbis@brif:~$ [Enter um comando]: ");
            String comando = input.nextLine().toUpperCase();

            int number = 0;
            number = 0;

            boolean existe = Arrays.stream(comandos)
                                    .anyMatch(cmd -> cmd.equalsIgnoreCase(comando));

            if (existe) {

                for(int i = 0; i < comandos.length; i++){
                    if(comando.equals(comandos[i])){
                        number = i;
                        break;
                    }
                }
            }else {
                try{
                    comandoInvalido();
                    number = 20;;
                } catch ( InterruptedException e){
                        e.printStackTrace();
                    }
                }

            switch(number)
            {
                case 0 -> {
                    exibirAjuda();
                }
                case 1 -> {
                    nmap();
                }
                case 2 -> {
                    pingSimulado(ip);
                }
                case 3 -> {
                    comandoRestrito("TRACEROUTE", "192.168.34.12");
                }
                case 4 -> {
                    comandoRestrito("VERIFY-BIN", "192.168.34.12");
                }
                case 5 -> {
                    pingSimulado("192.168.1.5");
                }
                case 6 -> {
                    pingInvalido("192.168.1.7");
                }
                case 7 -> {
                    analisadorDeRotas();
                }
                case 8 -> {
                    revelarIpMaster();
                }
                case 9 -> {
                    executarExtracaoFinal();
                    explosaoDeLogsAvancado();
                    missaoConcluida();
                }
            }
        }
        return false;
    }
}
